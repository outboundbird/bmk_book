[["index.html", "Preface", " Preface this is preface "],["intro.html", "1 Introduction", " 1 Introduction This is an evolving, never-complete notes for biological marker (biomarker) analysis in the pharmaceutical setting. The purpose is to document the concept of each type of biomarker and analytical approach.In general, it covers the topics of DNA, RNA, protein, cell types. It also talks about the some statistical issues such as multiplicity, power calculation, detection limit, etc. Additionally, I provide R code examples for implementing methods. These code are basic and are for illustration purpose only. This book is not meant for teaching purpose, albeit the scientific references and resources are provided under each chapter. The analytical approaches in this book are based on my personal work experience, and are not subject to any kind of the convention in any enterprising setting. It is open to constructive suggestions. I do not have strong urge for any recommendations in real practice since each problem is unique. However, the fundemental principles are discussed in the context. It is up to the analytical personnels to decide based on the situations they are facing. Last but not least, Markdown, no MS Word — Siying Huang "],["biology.html", "2 Basic biology 2.1 Blood samples", " 2 Basic biology 2.1 Blood samples Whole blood vs. peripheral blood mononuclear cells (PBMC) "],["cell-type.html", "3 Cell type 3.1 flowcytometry data 3.2 Cell type deconvolution", " 3 Cell type 3.1 flowcytometry data 3.2 Cell type deconvolution "],["bulk-rna-seqeuncing-analysis.html", "4 Bulk RNA seqeuncing analysis 4.1 Preprocessing 4.2 Differential expression analysis 4.3 Differential co-expression analysis 4.4 Pathway analysis 4.5 Clustering", " 4 Bulk RNA seqeuncing analysis 4.1 Preprocessing 4.1.1 Filtering 4.1.2 Normalization 4.2 Differential expression analysis 4.3 Differential co-expression analysis 4.4 Pathway analysis 4.4.1 Gene set enrichment analysis (GSEA) 4.4.2 Single sample gene set enrichment analysis (ssGSEA) 4.4.3 Gene set variation analysis (GSVA) 4.5 Clustering "],["Nanostring.html", "5 Nanostring technology", " 5 Nanostring technology "],["proteinomics.html", "6 Proteinomics 6.1 OLINK 6.2 Semalogic", " 6 Proteinomics 6.1 OLINK 6.2 Semalogic "],["pharmacogenetics-analysis.html", "7 Pharmacogenetics analysis 7.1 Basic genetic concepts 7.2 Pharmacoscan 7.3 HLA region targeted sequencing 7.4 Reference", " 7 Pharmacogenetics analysis 7.1 Basic genetic concepts gene 7.2 Pharmacoscan Samples were genotyped using a microarray platform (PharmacoScan™) that targets genetic variants reported to be associated with adverse drug reactions. The array contains more than 18,000 variants (single nucleotide polymorphisms (SNPs), insertions and deletions, copy number variants) for genes that have been associated with adverse drug reactions, including DILI, and are involved in the processes of drug absorption, distribution, metabolism, excretion (ADME genes) and antigen presentation (ie, HLA genes). The panel includes 927 HLA-related variants. File format for genomewide analysis map, ped files vcf files 7.2.1 Software for analysis PLINK R reading vcf files: vcfR 7.2.2 Single nucleotide variant data 7.3 HLA region targeted sequencing https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5610566/ Labcorp Drug Development performed targeted sequencing of HLA region genes. A next-generation sequencing approach based on the GenDX NGSgo MX11-3 kit™ that provides full coverage of Class I and II HLA genes at high resolution, with the exception of DRB4, was used. For Class I HLA genes A, B, and C, exons 1 through 8 were sequenced. For Class II genes DRB1, DRB3, DRB4, DRB5, DQA1, DQB1, DPA1, and DPB1, exons 1 through 6 were sequenced, with the exception of DRB4, where exons 2 and 3 were sequenced. Exons 2 and 3 code for the peptide binding domain of class I HLA, and exon 3 codes for the peptide domain of class II HLA. 7.3.1 HLA nomenclature and sequencing output 7.3.1.1 HLA allele naming nomenclature The suffix ‘L’ is used to indicate an allele which has been shown to have ‘Low’ cell surface expression when compared to normal levels. The ‘S’ suffix is used to denote an allele specifying a protein which is expressed as a soluble, ‘Secreted’ molecule but is not present on the cell surface. The ‘C’ suffix is assigned to alleles that produce proteins that are present in the ‘Cytoplasm’ and not on the cell surface. An ‘A’ suffix indicates an ‘Aberrant’ expression where there is some doubt as to whether a protein is actually expressed. A ‘Q’ suffix is used when the expression of an allele is ‘Questionable’, given that the mutation seen in the allele has been shown to affect normal expression levels in other alleles. Alleles that have been shown not to be expressed - ‘Null’ alleles - have been given the suffix ‘N’. 7.3.1.2 Sequencing resolution High resolution A high-resolution typing result is defined as a set of alleles that encode the same protein sequence for the region of the HLA molecule called the antigen binding site and that exclude alleles that are not expressed as cell-surface proteins. The antigen binding site includes domain 1 and domain 2 of the class I α polypeptides, and domain 1 of the class II α and domain 1 of the class II β polypeptide chains. Low resolution A DNA-based typing result at the level of the digits composing the first field in the DNA-based nomenclature. Examples include: A01; A02. If the resolution corresponds to a serologic equivalent, this typing result should also be called low resolution. Other levels of resolution If high resolution cannot be obtained or if the laboratory’s agreement with the entity requesting the testing limits the typing efforts to a subset of alleles, the laboratory may report its results at a level of resolution that falls between high resolution and low resolution. Examples are to consider only those alleles expected to be found in the local population or that are designated as common and well defined.3 A third example is typing that assigns a G group designation (eg, A*02:01:01G). 7.3.2 DRB1 and DRB3/DRB4/DRB5 7.4 Reference "],["multiplicity.html", "8 Multiplicity 8.1 Family wise comparison 8.2 False discovery rate (FDR) 8.3 Local FDR", " 8 Multiplicity Multiple comparison in omic data setting. 8.1 Family wise comparison 8.2 False discovery rate (FDR) 8.3 Local FDR "],["power-and-sample-size.html", "9 Power and sample size 9.1 Sample size calculation in in vitro studies 9.2 Sample size calculation in omics studies 9.3 Sample size calculation for calibration studies 9.4 Choosing samples range 9.5 Reference", " 9 Power and sample size 9.1 Sample size calculation in in vitro studies 9.2 Sample size calculation in omics studies Consideration of false positive results 9.3 Sample size calculation for calibration studies 9.3.1 1. Agreement between two measurements assess the agreement of two measurements 9.3.1.1 Inter-class correlation coefficient Pearson correlation Spearman correlation \\[ \\frac{\\sum_i\\rho(G_{j}(Rseq), G_{j}(nano)))}{n_i} \\] i - number of genes j - number of subjects Need to visually examine if there exist ceiling and flooring effect between two measurements. 9.3.1.2 Intraclass Correlation Coefficient (ICC) Generally speaking, the ICC determines the reliability of ratings by comparing the variability of different ratings of the same individuals to the total variation across all ratings and all individuals. A high ICC (close to 1) indicates high similarity between values from the same group. A low ICC (ICC close to zero) means that values from the same group are not similar. The sample size is calculated based on following parameter: ICC0 - ICC of null hypothesis (e.g. 0 no agreement or a value based on previous observations) ICC - hypothetical ICC alpha at 0.05 k = 2 (number of raters: nanostring vs. RNAseq) two tails Example calibration between RNAseq and nanostring measurements library(ICC.Sample.Size) library(tidyr) library(kableExtra) library(dplyr) sample &lt;- rep(c(&quot;RNAseq&quot;, &quot;nanostring&quot;), 3) genes &lt;- matrix(rnorm(30), ncol = 6) rownames(genes) &lt;- paste0(&quot;gene&quot;, c(1:5)) colnames(genes) &lt;- sample kable(genes, digits = 2) %&gt;% add_header_above(c(&quot;&quot;, &quot;ID1&quot; = 2, &quot;ID2&quot; = 2, &quot;ID3&quot; = 2)) ID1 ID2 ID3 RNAseq nanostring RNAseq nanostring RNAseq nanostring gene1 0.55 -0.74 -1.20 -0.86 0.40 0.07 gene2 -2.79 -0.69 -0.13 0.26 0.18 -0.82 gene3 -1.93 0.28 -0.71 -1.26 0.10 -0.30 gene4 -1.45 -0.42 -0.57 0.06 1.06 0.25 gene5 2.11 1.19 1.69 -1.01 -1.58 0.64 Statistical power at 80%, single tail k2a005p08 &lt;- calculateIccSampleSize(by = &quot;both&quot;, tails = 1) table_n &lt;- k2a005p08[[2]] knitr::kable(table_n, caption = &quot;Table of sample size (N) given null and alterative hythosis of ICC.&quot;) %&gt;% column_spec(2:12, color = ifelse(rownames(table_n) &gt; 0.5, &quot;red&quot;, 1)) %&gt;% add_header_above(c(&quot;&quot;, &quot;ICC0&quot; = 20)) %&gt;% pack_rows(&quot;ICC&quot;, 1, 20) Table 9.1: Table of sample size (N) given null and alterative hythosis of ICC. ICC0 0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 ICC 0 Inf 2470 616 272 152 96 66 48 36 28 22 18 14 12 10 8 7 5 4 3 0.05 2470 Inf 2446 606 267 148 93 64 46 34 26 21 16 13 11 9 7 6 5 3 0.1 616 2446 Inf 2397 591 259 143 89 61 43 32 25 19 15 12 10 8 6 5 4 0.15 272 606 2397 Inf 2324 570 248 136 85 57 40 30 23 17 14 11 8 7 5 4 0.2 152 267 591 2324 Inf 2229 544 235 128 79 53 37 27 20 15 12 9 7 5 4 0.25 96 148 259 570 2229 Inf 2113 512 220 119 73 48 34 24 18 14 10 8 6 4 0.3 66 93 143 248 544 2113 Inf 1978 476 203 109 66 44 30 21 16 11 8 6 4 0.35 48 64 89 136 235 512 1978 Inf 1826 436 184 98 59 38 26 18 13 9 7 4 0.4 36 46 61 85 128 220 476 1826 Inf 1660 393 165 87 51 33 22 15 10 7 5 0.45 28 34 43 57 79 119 203 436 1660 Inf 1483 347 144 75 44 27 18 12 8 5 0.5 22 26 32 40 53 73 109 184 393 1483 Inf 1297 300 123 63 36 22 14 9 5 0.55 18 21 25 30 37 48 66 98 165 347 1297 Inf 1108 253 101 51 28 17 10 6 0.6 14 16 19 23 27 34 44 59 87 144 300 1108 Inf 918 205 80 39 21 12 6 0.65 12 13 15 17 20 24 30 38 51 75 123 253 918 Inf 732 160 61 28 14 7 0.7 10 11 12 14 15 18 21 26 33 44 63 101 205 732 Inf 555 117 42 18 8 0.75 8 9 10 11 12 14 16 18 22 27 36 51 80 160 555 Inf 393 79 26 10 0.8 7 7 8 8 9 10 11 13 15 18 22 28 39 61 117 393 Inf 251 46 13 0.85 5 6 6 7 7 8 8 9 10 12 14 17 21 28 42 79 251 Inf 134 20 0.9 4 5 5 5 5 6 6 7 7 8 9 10 12 14 18 26 46 134 Inf 49 0.95 3 3 4 4 4 4 4 4 5 5 5 6 6 7 8 10 13 20 49 Inf 9.3.2 2. Sample size for calibrations 9.3.2.1 The calibration function The goal is to associate a test value (e.g. RNAseq) to a reference value (e.g. nanostring) via a calibration function. We collect N samples of paired measured: \\(\\{(X_i, Y_i), i = 1... N\\}\\), where \\[ X_i = \\tilde{X_i} + \\epsilon_i^x \\\\ Y_i = \\tilde{Y_i} + \\epsilon_i^y\\\\ \\tilde{Y_i} = f_0(\\tilde{X_i}) +e_i \\] where \\(\\epsilon_i^x ,\\epsilon_i^y, e_i\\) are zero mean errors with variance \\(\\sigma_i^{x2}, \\sigma_i^{y2}, \\sigma_0^2\\) In simple calibration function, we assume a linear function: \\(f_0(x) = \\beta_0+\\beta_1X\\). We want to estimage \\(\\beta_0, \\beta_1\\) to solve the calibration function. Some considerations for calibration function: the variance of the measurement error often depends on the underlying level. standard deviation for the measurement error is proportional to the underlying value the CV (SD/mean) of themeasurement error is approximately a constant therefore the estimate of variance, assuming: \\[ \\sigma_i^x = CV_x \\times \\tilde{X} \\\\ \\sigma_i^y = CV_x \\times \\tilde{Y} \\\\ \\] For estimating parameters in calibration function see the reference paper for different senarios. 9.3.2.1.1 Sample size calculation for calictration \\[ N = max_{k=1..K}\\bigg\\{\\frac{(2Z_{1-\\alpha})^2\\times \\sigma^2(x_k)}{\\delta_k^2}\\bigg\\}\\\\ \\sigma^2(x_k) =(1, x_k)\\sum\\bigg(1, x_k\\bigg) \\] \\(\\sum\\) is variance, co-variance matrix for estimated intercept and slope of the calibration function. \\(\\delta_k, k = 1...K\\) precision levels. Parameters to consider before calculation: x0: x value plan to calibrate with estimated calibration equation (e.g. \\(\\beta_0=0, \\beta_1=1\\), and this never happens in reality) d0: 95% CI of calibrated x value x: emperical observation of targeted distribution (e.g. mRNA levels from RNA seq or from nanostring) CVx: coefficient variation of measurement X (e.g. nanostring), assume to be constant CVy: coefficient variation of measurement Y (e.g. RNAseq), assume to be constant 9.3.2.2 Sample size calculation examples 9.3.2.2.1 CVx= CVy = 0.2 x0 &lt;- c(40, 50, 60, 70, 80, 90) d0 &lt;- c(5, 10, 20, 30, 40, 100) calc_samplesize &lt;- function(x0, d0, x =seq(5, 1000, length = 1000), CVx =0.2, CVy=0.2) { CVcalibration::samplesize(x0, d0, x = x, # assuming RNAseq raw count data CVx = CVx, CVy = CVy ) } par(mfrow = c(2, 3)) lapply(d0, function(d) { rst &lt;- sapply(x0, function(x) calc_samplesize(x0 = x, d0 = d)) tab &lt;- do.call(&quot;rbind&quot;, rst) # rownames(tab) &lt;- x0 ymin &lt;- min(tab) ymax &lt;- max(tab) plot(x0, tab[, 1], type = &quot;b&quot;, ylim = c(ymin, ymax), ylab = &quot;N&quot;, main = paste(&quot;d0=&quot;, d) ) lines(x0, tab[, 3], lty = 3, type = &quot;b&quot;, pch = 2) legend(&quot;topright&quot;, c(&quot;1 CV known&quot;, &quot;both CVs known&quot;), bty = &quot;n&quot;, lty = c(1, 3), pch = c(1, 2) ) return(NULL) }) 9.3.2.2.2 CVx=0.1, CVy=0.05 9.4 Choosing samples range There are two important considerations for choosing sampling methods: (i) the selected Xi values should cover the entire region of interest and (ii) the particular sampling scheme should help us to obtain an accurate estimate for the calibration function. There are several obvious choices: randomly sampling from the stored samples (sample more from important regaions, but less accurate) uniformly sampling from the given interval of interest (more accurate, less samples from important regions to investigate linear assumption) ; a hybrid of the aforementioned two sampling methods (balance between above two): dividing the range of interest into intervals using the quantiles of the observed samples uniformly sampling equal number of Xi’s from each of the subintervals. par(mfrow = c(1, 3)) set.seed(789) x &lt;- rnorm(500, 2) x1 &lt;- runif(500, -1, 5) qt &lt;- quantile(x) x2 &lt;- c(runif(100,qt[1], qt[2]), runif(100, qt[2], qt[3]), runif(100, qt[3], qt[4]), runif(100,qt[4], qt[5])) hist(x, breaks =30, main =&quot;random sampling&quot;) hist(x1, breaks = 30, main =&quot;uniform sampling&quot;) hist(x2, breaks = 30, main = &quot;hybrid sampling&quot;) 9.4.1 Estimating coefficient variation (CV) within the same measures repeated measures in the same sample to obtain the estimation of CV in both techonologies 9.4.1.1 Consideration for prediction precision Calibration can be viewed as a prediction model. Without any error measurement and assuming constant error variance, a linear model can be used: \\[Y_i = a\\beta X_i +b + \\epsilon\\] Uncertainy will be considered when translating the cut-off from RNAseq data to Nanostring. It boils down to estimate with prediction the residual variance. When a sample of size \\(n\\) is drawn from a normal distribution, a \\(1-\\alpha\\) CI of the unknown population variance is given by \\[\\frac{n-1}{\\chi^2_{1-\\alpha/2, n-1}}s^2 &lt; \\sigma^2 &lt; \\frac{n-1}{\\chi^2_{\\alpha/2, n-1}}s^2\\] The fold change between the bounds (multiplicative margin of error) can be used as a precision proxy [4]. Formula can be adapted with \\(p\\) parameters [5]. Non linear relationship can be considered with a restricted cubic splines and k knots (k-1 parameters) We assume that k = 3f: dat &lt;- data.frame( MMOE = c(1.1, 1.2), linear = c(235, 71), non_linear = c(238, 74) ) knitr::kable(dat) MMOE linear non_linear 1.1 235 238 1.2 71 74 9.4.2 Final consideration for sample size The sample size consideration should serve the purpose of analysis, which in our case is calibraion and agreement test. These two objectives might render different numbers. In order to gurantee the quality of prelminary analysis, we should take the max{N1, N2, N3}. 9.5 Reference [1]T. K. Koo and M. Y. Li, “A Guideline of Selecting and Reporting Intraclass Correlation Coefficients for Reliability Research”, Journal of Chiropractic Medicine, vol. 15, no. 2, pp. 155-163, Jun. 2016, doi: 10.1016/j.jcm.2016.02.012. [2]S. D. Walter, M. Eliasziw, and A. Donner, “Sample size and optimal designs for reliability studies”, Statistics in Medicine, vol. 17, no. 1, pp. 101–110, 1998, doi: 10.1002/(SICI)1097-0258(19980115)17:1&lt;101::AID-SIM727&gt;3.0.CO;2-E. [3] L. Tian, R. A. Durazo-Arvizu, G. Myers, S. Brooks, K. Sarafin, and C. T. Sempos, “The estimation of calibration equations for variables with heteroscedastic measurement errors,” Statistics in Medicine, vol. 33, no. 25, pp. 4420-4436, 2014, doi: 10.1002/sim.6235. [4]F. E. Harrell Jr., “Regression Modeling Strategies”. Springer International Publishing, 2016 [5]R. D. Riley, J. Ensor, K. I. E. Snell, et al. “Calculating the sample size required for developing a clinical prediction model”. BMJ. 2020 "],["detection-limit-of-assays.html", "10 Detection limit of assays 10.1 Upper and lower detection limit 10.2 Violation in distribution assumption", " 10 Detection limit of assays 10.1 Upper and lower detection limit 10.2 Violation in distribution assumption "],["visualization.html", "11 Visualization 11.1 packages 11.2 Basic static plot 11.3 Special plots", " 11 Visualization 11.1 packages 11.2 Basic static plot 11.3 Special plots 11.3.1 Genetic analysis 11.3.2 RNA seq analysis 11.3.3 Clustering analysis "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
